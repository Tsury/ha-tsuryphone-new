[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ha-tsuryphone"
version = "1.0.0"
description = "Home Assistant integration for TsuryPhone device"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "TsuryPhone Contributors"},
]
keywords = ["homeassistant", "tsuryphone", "voip", "integration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent", 
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Home Automation",
]
dependencies = [
    "homeassistant>=2025.9.1",
    "aiohttp>=3.8.0",
]

[project.urls]
Homepage = "https://github.com/your-org/ha-tsuryphone-new-cc"
"Bug Tracker" = "https://github.com/your-org/ha-tsuryphone-new-cc/issues"
Documentation = "https://github.com/your-org/ha-tsuryphone-new-cc/blob/main/README.md"
Repository = "https://github.com/your-org/ha-tsuryphone-new-cc"

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 100
extend-exclude = [
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    ".git",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # Line too long (handled by formatter)
    "B008",  # Do not perform function calls in argument defaults
    "RUF012", # Mutable class attributes should be annotated with `ClassVar`
]

[tool.ruff.lint.per-file-ignores]
"custom_components/tsuryphone/const.py" = ["F403", "F405"]
"tests/*.py" = ["B018"]  # Allow useless expression in tests

[tool.ruff.lint.isort]
known-first-party = ["custom_components.tsuryphone"]
force-sort-within-sections = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# MyPy configuration
[tool.mypy]
python_version = "3.11"
show_error_codes = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = [
    "homeassistant.*",
    "voluptuous.*",
    "aiohttp.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "-v",
    "--cov=custom_components.tsuryphone",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
]

# Coverage configuration
[tool.coverage.run]
source = ["custom_components/tsuryphone"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
]

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", ".pytest_cache", "__pycache__"]
skips = [
    "B101",  # Test for use of assert
    "B601",  # Test for shell injection within Popen
]